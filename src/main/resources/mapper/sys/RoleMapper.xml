<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujigu.secure.sys.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.ujigu.secure.sys.entity.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ac_id" property="acId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_uptime" property="lastUptime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="show_2_user" property="show2User" jdbcType="TINYINT" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, ac_id, name, create_time, last_uptime, remark, state, show_2_user, project_name
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="BaseColumnList" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ujigu.secure.sys.entity.Role" >
    insert into role (id, ac_id, name, 
      create_time, last_uptime, remark, 
      state, show_2_user, project_name
      )
    values (#{id,jdbcType=INTEGER}, #{acId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUptime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{show2User,jdbcType=TINYINT}, #{projectName,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPK" parameterType="com.ujigu.secure.sys.entity.Role" >
    update role
    <set >
      <if test="acId != null" >
        ac_id = #{acId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUptime != null" >
        last_uptime = #{lastUptime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="show2User != null" >
        show_2_user = #{show2User,jdbcType=TINYINT},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.ujigu.secure.sys.entity.Role" >
    insert into role (id, ac_id, name, 
      create_time, last_uptime, remark, 
      state, show_2_user, project_name
      )
    values (#{id,jdbcType=INTEGER}, #{acId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUptime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{show2User,jdbcType=TINYINT}, #{projectName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into role
		(id,ac_id,name,create_time,last_uptime,remark,state,show_2_user,project_name)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.id,jdbcType=INTEGER},#{item.acId,jdbcType=INTEGER},#{item.name,jdbcType=VARCHAR},#{item.createTime,jdbcType=TIMESTAMP},#{item.lastUptime,jdbcType=TIMESTAMP},#{item.remark,jdbcType=VARCHAR},#{item.state,jdbcType=TINYINT},#{item.show2User,jdbcType=TINYINT},#{item.projectName,jdbcType=VARCHAR})
	</foreach>
  </insert>
  <select id="findByPK_inMaster" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from role	where id = #{pk, jdbcType=INTEGER}
  </select>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		count(1)
	from
		role
	<include refid="pageCondition" />
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from role
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByEntity" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from role
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.id != null" >
				and id = #{entity.id,jdbcType=INTEGER}
			</if>
			<if test="entity.acId != null" >
				and ac_id = #{entity.acId,jdbcType=INTEGER}
			</if>
			<if test="entity.name != null" >
				and name = #{entity.name,jdbcType=VARCHAR}
			</if>
			<if test="entity.createTime != null" >
				and create_time = #{entity.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.lastUptime != null" >
				and last_uptime = #{entity.lastUptime,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.remark != null" >
				and remark = #{entity.remark,jdbcType=VARCHAR}
			</if>
			<if test="entity.state != null" >
				and state = #{entity.state,jdbcType=TINYINT}
			</if>
			<if test="entity.show2User != null" >
				and show_2_user = #{entity.show2User,jdbcType=TINYINT}
			</if>
			<if test="entity.projectName != null" >
				and project_name = #{entity.projectName,jdbcType=VARCHAR}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByPage" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from role
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
          		<!-- 写where的判断条件,下边是样例-->
			<if test="entity.state != null">
				and state = #{entity.state,jdbcType=TINYINT}
			</if>
			<if test="entity.acId != null">
				and ac_id = #{entity.acId,jdbcType=INTEGER}
			</if>
			<if test="entity.name != null">
				and name like concat('%', #{entity.name,jdbcType=VARCHAR}, '%') 
			</if>
        </if>
        <if test="dynamicSql != null">
			and ${dynamicSql}
		</if>
      </trim>
    </where>
  </sql>
  
  <select id="findUserRole" resultMap="BaseResultMap">
    select 
      <include refid="BaseColumnList"/>
    from role
    where show_2_user = 1 and state = 0
  </select>
  
  <select id="findByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
      r.id, r.name, r.create_time, r.last_uptime, r.remark, r.state,r.project_name
    from 
      role r inner join user_r2_role urr on r.id = urr.role_id
    where 
      urr.user_id = #{userId, jdbcType=BIGINT}
     and 
      r.state = 0
  </select>
</mapper>