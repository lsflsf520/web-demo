<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujigu.secure.sys.dao.WorkerDao" >
  <resultMap id="BaseResultMap" type="com.ujigu.secure.sys.entity.Worker" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ac_id" property="acId" jdbcType="INTEGER" />
    <result column="worker_name" property="workerName" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="depart_name" property="departName" jdbcType="VARCHAR" />
    <result column="depart_id" property="departId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" typeHandler="com.ujigu.secure.db.typeHandler.CommonStatusHandler" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, ac_id, worker_name, role_id, depart_name, depart_id, create_time, password, login_name, 
    phone, email, status
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="BaseColumnList" />
    from worker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Integer" >
    delete from worker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ujigu.secure.sys.entity.Worker" >
    insert into worker (id, ac_id, worker_name, 
      role_id, depart_name, depart_id, 
      create_time, password, login_name, 
      phone, email, status)
    values (#{id,jdbcType=INTEGER}, #{acId,jdbcType=INTEGER}, #{workerName,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{departName,jdbcType=VARCHAR}, #{departId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{password,jdbcType=CHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{status,typeHandler=com.ujigu.secure.db.typeHandler.CommonStatusHandler})
  </insert>
  <update id="updateByPK" parameterType="com.ujigu.secure.sys.entity.Worker" >
    update worker
    <set >
      <if test="acId != null" >
        ac_id = #{acId,jdbcType=INTEGER},
      </if>
      <if test="workerName != null" >
        worker_name = #{workerName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="departName != null" >
        depart_name = #{departName,jdbcType=VARCHAR},
      </if>
        depart_id = #{departId,jdbcType=INTEGER},
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,typeHandler=com.ujigu.secure.db.typeHandler.CommonStatusHandler},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.ujigu.secure.sys.entity.Worker" >
    insert into worker (id, ac_id, worker_name, 
      role_id, depart_name, depart_id, 
      create_time, password, login_name, 
      phone, email, status)
    values (#{id,jdbcType=INTEGER}, #{acId,jdbcType=INTEGER}, #{workerName,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{departName,jdbcType=VARCHAR}, #{departId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{password,jdbcType=CHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{status,typeHandler=com.ujigu.secure.db.typeHandler.CommonStatusHandler})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into worker
		(id,ac_id,worker_name,role_id,depart_name,depart_id,create_time,password,login_name,phone,email,status)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.id,jdbcType=INTEGER},#{item.acId,jdbcType=INTEGER},#{item.workerName,jdbcType=VARCHAR},#{item.roleId,jdbcType=INTEGER},#{item.departName,jdbcType=VARCHAR},#{item.departId,jdbcType=INTEGER},#{item.createTime,jdbcType=TIMESTAMP},#{item.password,jdbcType=CHAR},#{item.loginName,jdbcType=VARCHAR},#{item.phone,jdbcType=CHAR},#{item.email,jdbcType=VARCHAR},#{item.status,jdbcType=INTEGER})
	</foreach>
  </insert>
  <select id="findByPK_inMaster" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from worker	where id = #{pk, jdbcType=INTEGER}
  </select>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		count(1)
	from
		worker
	<include refid="pageCondition" />
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from worker
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByEntity" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from worker
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.id != null" >
				and id = #{entity.id,jdbcType=INTEGER}
			</if>
			<if test="entity.acId != null" >
				and ac_id = #{entity.acId,jdbcType=INTEGER}
			</if>
			<if test="entity.workerName != null" >
				and worker_name = #{entity.workerName,jdbcType=VARCHAR}
			</if>
			<if test="entity.roleId != null" >
				and role_id = #{entity.roleId,jdbcType=INTEGER}
			</if>
			<if test="entity.departName != null" >
				and depart_name = #{entity.departName,jdbcType=VARCHAR}
			</if>
			<if test="entity.departId != null" >
				and depart_id = #{entity.departId,jdbcType=INTEGER}
			</if>
			<if test="entity.createTime != null" >
				and create_time = #{entity.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="entity.password != null" >
				and password = #{entity.password,jdbcType=CHAR}
			</if>
			<if test="entity.loginName != null" >
				and login_name = #{entity.loginName,jdbcType=VARCHAR}
			</if>
			<if test="entity.phone != null" >
				and phone = #{entity.phone,jdbcType=CHAR}
			</if>
			<if test="entity.email != null" >
				and email = #{entity.email,jdbcType=VARCHAR}
			</if>
			<if test="entity.status != null" >
				and status = #{entity.status,typeHandler=com.ujigu.secure.db.typeHandler.CommonStatusHandler}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByPage" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from worker
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
          		<!-- 写where的判断条件,下边是样例-->
			<if test="entity.workerName != null">
				(worker_name like concat('%', #{entity.workerName,jdbcType=VARCHAR},'%')
			  or login_name like  concat('%', #{entity.workerName,jdbcType=VARCHAR},'%')
			  or phone like  concat('%', #{entity.workerName,jdbcType=VARCHAR},'%')
			  or email like  concat('%', #{entity.workerName,jdbcType=VARCHAR},'%')
			  )
			</if>
			<if test="entity.departId != null">
			  and depart_id =  #{entity.departId,jdbcType=INTEGER}
			</if>
			<if test="entity.acId != null">
			  and ac_id = #{entity.acId,jdbcType=INTEGER}
			</if>
		    and status = 0
        </if>
        <if test="dynamicSql != null">
			and ${dynamicSql}
		</if>
      </trim>
    </where>
  </sql>
  
   <select id="findWorkers" resultMap="BaseResultMap" >
    select 
      <include refid="BaseColumnList"/>
    from worker
    where
      status = 0
     and 
      id in (
       <foreach collection="array" item="userId" separator="," index="index">
         #{userId, jdbcType=Integer}
       </foreach>
      )
  </select>
  
  <select id="findWorkerByUniqFlag" resultMap="BaseResultMap">
    select 
      <include refid="BaseColumnList"/>
    from worker
    <where>
		(<trim suffixOverrides="or" >
			<if test="loginName != null" >
				login_name = #{loginName, jdbcType=VARCHAR}
			</if>
			<if test="phone != null" >
				or phone = #{phone,jdbcType=CHAR}
			</if>
			<if test="email != null" >
				or email = #{email,jdbcType=VARCHAR}
			</if>
		</trim>)
		<if test="id != null" >
			and id != #{id,jdbcType=INTEGER}
		</if>
		<if test="acId != null" >
			and ac_id = #{acId,jdbcType=INTEGER}
		</if>
	</where> 
  </select>
</mapper>